@using System.Security.Cryptography
@using Microsoft.AspNet.Identity
@model IEnumerable<Contests.App.Models.ViewModels.ContestViewModel>
@{
    ViewBag.Title = "Contest details";
}

<h2>Contest details</h2>

<div class="container col-xs-5">
    @Html.DisplayForModel()

    @if (@Model.First().OrganozatorId == HttpContext.Current.User.Identity.GetUserId())
    {
        @Html.ActionLink("Edit Contest", "Edit", "Contest", routeValues: new { contestId = @Model.First().Id, area = ""}, htmlAttributes: null)
    }
</div>


<div class="container col-xs-7">

    @if (Model.First().CanParticipate)
    {
        @Html.ActionLink("Upload photo", "Upload", "Contest", routeValues: new {contestId = Model.First().Id, area = ""}, htmlAttributes: new {@class = "btn btn-default", title = "Upload photo"})
    }

    @if (Model.First().HasVoted)
    {
        <h4>You have allready voted for this contest</h4>
    }


    @foreach (var photo in @Model.First().Photos)
    {
        <div class="col-md-4">
            <div class="col-md-3 photo-contests-photo-wrapper">
                <div class="photo-contest-photo">
                    <img src="@photo.Url" class="gallery-item" width="300"/>
                </div>
                <div class="photo-contest-photographer">
                    @Html.ActionLink(photo.Owner.FullName, "Details", "Users", routeValues: new {id = photo.OwnerId, area = ""}, htmlAttributes: new {title = "Photographer profile"})
                    <div class="photo-contest-category">@*@photo.Contest.Category.Name*@ Category</div>
                </div>
            </div>
            <div class="col-md-1">
                <h3>Votes: <span id="photo-@photo.Id-votes">@photo.VotesCount</span></h3>
                @if (@Model.First().CanVote)
                {
                    using (Ajax.BeginForm("Vote", "Contest", new {photoId = photo.Id, contestId = @Model.First().Id}, new AjaxOptions()
                    {
                        HttpMethod = "POST",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = string.Format("photo-{0}-votes", photo.Id)
                    }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" name="name" value="+" class="btn btn-success"/>
                    }
                }
            </div>
        </div>
    }


    @*@Html.DisplayFor(x => x.First().Photos)*@
</div>



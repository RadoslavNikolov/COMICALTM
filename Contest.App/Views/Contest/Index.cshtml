@model Contests.App.Models.BindingModels.ContestBindingModel

@{
    ViewBag.Title = "Contest";
}

@Html.ActionLink("CreateContest", "CreateContest", "Contest");

@using (Html.BeginForm("CreateContest", "Contest", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new contest.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.StartDate, new { @class = "col-md-2 control-label" })
        <div class='input-group col-md-10 date date-input' id='datetimepicker'>
            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control" })
            <span class="input-group-addon pull-left datepicker-icon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
    <div class="form-group" id="reward-type">
        @Html.LabelFor(m => m.RewardType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <label> @Html.RadioButtonFor(m => m.RewardType, "SingleWinner", new { id = "single-winner", @checked = "checked", @class = "open-button" }) Single winner </label>
            <label> @Html.RadioButtonFor(m => m.RewardType, "TopNWinners", new {id = "multiple-winners", @class = "close-button" }) Many winners </label>
            <div id="participants-section" class="form-group hidden-element slide-toggle">
                <label for="participants-input">First N win:</label>
                <input type="number" name="participants" id="participants-input" class="form-control" min="2" max="10"/>
            </div>
        </div>
    </div>
    <div class="form-group" id="voting-type">
        @Html.LabelFor(m => m.VotingType, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            <label> @Html.RadioButtonFor(m => m.VotingType, "Open", new {id = "voting-open", @checked = "checked", @class="open-button" }) Open </label>
            <label> @Html.RadioButtonFor(m => m.VotingType, "Close", new { id = "voting-close", @class = "close-button" }) Closed </label>
            <div id="voters" class="hidden-element slide-toggle"></div>
        </div>
    </div> 

    <div class="form-group" id="participation-type">
        @Html.LabelFor(m => m.ParticipationType, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            <label> @Html.RadioButtonFor(m => m.ParticipationType, "Open", new { id = "voting-open", @checked = "checked", @class = "open-button" }) Open </label>
            <label> @Html.RadioButtonFor(m => m.ParticipationType, "Close", new { id = "voting-close", @class = "close-button" }) Closed </label>
            <div id="participators" class="hidden-element slide-toggle"></div>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Wallpaper", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="Wallpaper" name="upload" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Create"/>
        </div>
    </div>

    @*<div class="body-main col-md-9">
        <div id="categories"></div>
    </div>*@
}

@section scripts{

    <script type="text/javascript">

        $(document).ready(function () {
            
            $(document).on('click', '#btnRight', function (e) {
                var selectedOpts = $('#lstBox1 option:selected');
                if (selectedOpts.length === 0) {
                    alert("Nothing to move.");
                    e.preventDefault();
                }

                $('#lstBox2').append($(selectedOpts).clone());
                $(selectedOpts).remove();
                e.preventDefault();
            });

            $(document).on('click', '#btnLeft', function (e) {
                var selectedOpts = $('#lstBox2 option:selected');
                if (selectedOpts.length === 0) {
                    alert("Nothing to move.");
                    e.preventDefault();
                }

                $('#lstBox1').append($(selectedOpts).clone());
                $(selectedOpts).remove();
                e.preventDefault();
            });

            
            $(document).on('click', '.close-button', function(e) {
                var parent = $(this).parent().parent();
                parent.find('.slide-toggle').show();
            });

            $(document).on('click', '.open-button', function (e) {
                var parent = $(this).parent().parent();
                parent.find('.slide-toggle').hide();
            });



            function fillVoters() {
                $.ajax({
                    type: "GET",
                    url: "/Users/GetAllUsers"
                })
                    .done(function (data) {
                        $('#voters').html(data);
                    });
            };

            function fillParticipators() {
                $.ajax({
                    type: "GET",
                    url: "/Users/GetAllUsers"
                })
                    .done(function (data) {
                        $('#participators').html(data);
                    });
            };

            fillVoters();
            fillParticipators();
        });

    </script>
}

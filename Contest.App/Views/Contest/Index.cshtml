@model Contests.App.Models.BindingModels.ContestBindingModel

@{
    ViewBag.Title = "Contest";
}

@Html.ActionLink("CreateContest", "CreateContest", "Contest");

@using (Html.BeginForm("CreateContest", "Contest", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new contest.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.StartDate, new { @class = "col-md-2 control-label" })
        <div class='input-group col-md-10 date date-input' id='datetimepicker'>
            @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control" })
            <span class="input-group-addon pull-left datepicker-icon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
    <div class="form-group" id="reward-type">
        @Html.LabelFor(m => m.RewardType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <label> @Html.RadioButtonFor(m => m.RewardType, "SingleWinner", new { id = "single-winner" }) Single winner </label>
            <label> @Html.RadioButtonFor(m => m.RewardType, "TopNWinners", new { id = "multiple-winners" }) Many winners </label>
        </div>
    </div>
    <div class="form-group" id="voting-type">
        @Html.LabelFor(m => m.VotingType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <label> @Html.RadioButtonFor(m => m.VotingType, "Open", new { id = "voting-open" }) Open </label>
            <label> @Html.RadioButtonFor(m => m.VotingType, "Close", new { id = "voting-close" }) Closed </label>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Create" />
        </div>
    </div>
}